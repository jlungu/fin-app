{"ast":null,"code":"var _jsxFileName = \"/Users/james/iCloud Drive (Archive)/Documents/Code/fin-app/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, ConnectedRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport ChartComponent from \"./components/ChartComponent\";\nimport InfoComponent from \"./components/InfoComponent\";\nimport CompanyComponent from \"./components/CompanyComponent\";\nimport Navbar from \"./components/Navbar\";\nimport StockHeader from \"./components/StockHeader\";\nimport HomeComponent from \"./components/HomeComponent\";\nimport OverviewPageComponent from \"./components/OverviewPageComponent\";\nimport LoginComponent from \"./components/LoginComponent\";\nimport RegisterComponent from \"./components/RegisterComponent\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { getWatchlists } from \"./actions/watchlistActions\";\n\nclass App extends Component {\n  componentWillMount() {\n    //Checking if user is already logged in. If so, we re-log them in\n    if (localStorage.jwtToken) {\n      const token = localStorage.jwtToken;\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n      store.dispatch(setCurrentUser(decoded));\n      store.dispatch(getWatchlists(decoded.email)); //Getting users watchlists to save in store.\n\n      const currentTime = Date.now() / 1000; // to get in milliseconds\n\n      if (decoded.exp < currentTime) {\n        // Logout user, token expired\n        store.dispatch(logoutUser());\n      }\n    }\n  }\n\n  render() {\n    return this.props.watchlists.watchlists( /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/home\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: LoginComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      component: RegisterComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/home\",\n      component: HomeComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/stock/:symbol\",\n      component: OverviewPageComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  watchlists: store.watchlists,\n  auth: store.auth,\n  errors: state.errors\n});\n\nconst mapDispatchToProps = {\n  setCurrentUser,\n  getWatchlists,\n  logoutUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/james/iCloud Drive (Archive)/Documents/Code/fin-app/frontend/src/App.js"],"names":["React","Component","ReactDOM","BrowserRouter","Router","ConnectedRouter","Switch","Route","Link","Redirect","Provider","store","connect","ChartComponent","InfoComponent","CompanyComponent","Navbar","StockHeader","HomeComponent","OverviewPageComponent","LoginComponent","RegisterComponent","jwt_decode","setAuthToken","setCurrentUser","logoutUser","getWatchlists","App","componentWillMount","localStorage","jwtToken","token","decoded","dispatch","email","currentTime","Date","now","exp","render","props","watchlists","history","pathname","mapStateToProps","state","auth","errors","mapDispatchToProps","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router,ConnectedRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\nimport ChartComponent from \"./components/ChartComponent\";\nimport InfoComponent from \"./components/InfoComponent\";\nimport CompanyComponent from \"./components/CompanyComponent\";\nimport Navbar from \"./components/Navbar\";\nimport StockHeader from \"./components/StockHeader\";\nimport HomeComponent from \"./components/HomeComponent\";\nimport OverviewPageComponent from \"./components/OverviewPageComponent\";  \nimport LoginComponent from \"./components/LoginComponent\";\nimport RegisterComponent from \"./components/RegisterComponent\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { getWatchlists } from \"./actions/watchlistActions\"\n\nclass App extends Component {\n  componentWillMount(){\n     //Checking if user is already logged in. If so, we re-log them in\n    if (localStorage.jwtToken) {\n      const token = localStorage.jwtToken;\n      setAuthToken(token);\n\n      const decoded = jwt_decode(token);\n      store.dispatch(setCurrentUser(decoded));\n      store.dispatch(getWatchlists(decoded.email))//Getting users watchlists to save in store.\n\n      const currentTime = Date.now() / 1000; // to get in milliseconds\n      if (decoded.exp < currentTime) {\n        // Logout user, token expired\n        store.dispatch(logoutUser());\n      }\n    }\n  }\n\n  render(){\n    return this.props.watchlists.watchlists(\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <div>\n              <Navbar history={this.props.history}/>\n              <Switch>\n                <Route exact path=\"/\" render={() => <Redirect to={{pathname: \"/home\"}} />} />\n                <Route path=\"/login\" component={LoginComponent}></Route>\n                <Route path=\"/register\" component={RegisterComponent}></Route>\n                <Route path=\"/home\" component={HomeComponent}></Route>\n                <Route path=\"/stock/:symbol\" component={OverviewPageComponent}></Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  watchlists: store.watchlists,\n  auth: store.auth,\n  errors: state.errors,\n})\n\nconst mapDispatchToProps = {\n  setCurrentUser,\n  getWatchlists,\n  logoutUser\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App); \n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}