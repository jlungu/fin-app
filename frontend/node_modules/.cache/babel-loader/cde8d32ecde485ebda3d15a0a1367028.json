{"ast":null,"code":"var _jsxFileName = \"/Users/james/iCloud Drive (Archive)/Documents/Code/fin-app/frontend/src/components/StockHeader.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateWatchlist } from \"../actions/watchlistActions\";\nexport class StockHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      exchange: '',\n      ticker: '',\n      onWatchlist: false\n    };\n  }\n\n  componentDidMount() {\n    //API Call to grab name, exchange stock is on, and ticker symbol!\n    fetch('https://finnhub.io/api/v1/stock/profile2?symbol=' + this.props.symbol + '&token=brain17rh5rbgnjpuck0').then(res => res.json()).then(data => {\n      this.setState({\n        name: data.name,\n        ticker: data.ticker,\n        exchange: data.exchange\n      });\n    }); //Checking if this stock is on our watchlist...only if user is logged in.\n\n    if (this.props.auth.isAuthenticaed) {\n      console.log(this.props.watchlists);\n    }\n  }\n\n  render() {\n    var {\n      name,\n      ticker,\n      exchange\n    } = this.state;\n\n    if (this.props.symbol == \"^DJI\") {\n      //DOW JONES isnt directly supported by finnhub. Manually inputting info\n      ticker = \"^DJI\";\n      name = \"Dow Jones Industrial Average\";\n      exchange = \"DJI - DJI REAL TIME PRICE.\";\n    }\n\n    if (this.props.symbol == \"^GSPC\") {\n      //DOW JONES isnt directly supported by finnhub. Manually inputting info\n      ticker = \"^GSPC\";\n      name = \"S&P 500 - Standard and Poor's 500\";\n      exchange = \"SNP - SNP REAL TIME PRICE.\";\n    }\n\n    if (this.props.symbol == \"^IXIC\") {\n      //DOW JONES isnt directly supported by finnhub. Manually inputting info\n      ticker = \"^IXIC\";\n      name = \"NASDAQ Composite\";\n      exchange = \"NASDAQ GIDS - NASDAQ GIDS REAL TIME PRICE. \";\n    }\n\n    if (this.props.symbol == \"^RUT\") {\n      //DOW JONES isnt directly supported by finnhub. Manually inputting info\n      ticker = \"^RUT\";\n      name = \"Russell 2000\";\n      exchange = \"CHICAGO OPTIONS - CHICAGO OPTIONS DELAYED PRICE.\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"stock-hdr-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"stock_header_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"stock-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, ticker, \" - \", name), this.state.onWatchlist ? /*#__PURE__*/React.createElement(\"i\", {\n      id: \"favorite_button_filled\",\n      class: \"fas fa-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      id: \"favorite_button\",\n      class: \"far fa-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"stock-subheader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, exchange));\n  }\n\n}\nStockHeader.propTypes = {\n  updateWatchlist: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  watchlists: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  user: state.user,\n  watchlists: state.watchlists,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  updateWatchlist\n})(StockHeader);","map":{"version":3,"sources":["/Users/james/iCloud Drive (Archive)/Documents/Code/fin-app/frontend/src/components/StockHeader.js"],"names":["React","Component","PropTypes","connect","updateWatchlist","StockHeader","constructor","props","state","name","exchange","ticker","onWatchlist","componentDidMount","fetch","symbol","then","res","json","data","setState","auth","isAuthenticaed","console","log","watchlists","render","propTypes","func","isRequired","object","errors","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateWatchlist } from \"../actions/watchlistActions\";\n\nexport class StockHeader extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            name: '',\n            exchange: '',\n            ticker: '',\n            onWatchlist: false\n        }\n    }\n\n    componentDidMount(){\n        //API Call to grab name, exchange stock is on, and ticker symbol!\n        fetch('https://finnhub.io/api/v1/stock/profile2?symbol=' + this.props.symbol +'&token=brain17rh5rbgnjpuck0')\n        .then(res => res.json())\n        .then(data => {this.setState({\n            name: data.name,\n            ticker: data.ticker,\n            exchange: data.exchange\n        })      \n        })\n        //Checking if this stock is on our watchlist...only if user is logged in.\n        if (this.props.auth.isAuthenticaed){\n            console.log(this.props.watchlists)\n        }\n    }\n\n    render(){\n        var {name, ticker, exchange} = this.state;\n        if (this.props.symbol == \"^DJI\"){\n            //DOW JONES isnt directly supported by finnhub. Manually inputting info\n            ticker = \"^DJI\"\n            name = \"Dow Jones Industrial Average\"\n            exchange = \"DJI - DJI REAL TIME PRICE.\"\n        }\n        if (this.props.symbol == \"^GSPC\"){\n            //DOW JONES isnt directly supported by finnhub. Manually inputting info\n            ticker = \"^GSPC\"\n            name = \"S&P 500 - Standard and Poor's 500\"\n            exchange = \"SNP - SNP REAL TIME PRICE.\"\n        }\n        if (this.props.symbol == \"^IXIC\"){\n            //DOW JONES isnt directly supported by finnhub. Manually inputting info\n            ticker = \"^IXIC\"\n            name = \"NASDAQ Composite\"\n            exchange = \"NASDAQ GIDS - NASDAQ GIDS REAL TIME PRICE. \"\n        }\n        if (this.props.symbol == \"^RUT\"){\n            //DOW JONES isnt directly supported by finnhub. Manually inputting info\n            ticker = \"^RUT\"\n            name = \"Russell 2000\"\n            exchange = \"CHICAGO OPTIONS - CHICAGO OPTIONS DELAYED PRICE.\"\n        }\n        return(\n            <div class=\"stock-hdr-div\">\n                <div id=\"stock_header_name\">\n                <span id=\"stock-header\">{ticker} - {name}</span>\n                {this.state.onWatchlist? <i id=\"favorite_button_filled\" class=\"fas fa-star\"></i>\n                : <i id=\"favorite_button\" class=\"far fa-star\"></i>}\n                </div>\n                <span id=\"stock-subheader\">{exchange}</span>\n            </div>\n        );\n    }\n}\n\nStockHeader.propTypes = {\n    updateWatchlist: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    watchlists: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    auth: state.auth, \n    user: state.user,\n    watchlists: state.watchlists, \n    errors: state.errors\n  });\n  \n  export default connect(mapStateToProps, { updateWatchlist })(StockHeader);"]},"metadata":{},"sourceType":"module"}