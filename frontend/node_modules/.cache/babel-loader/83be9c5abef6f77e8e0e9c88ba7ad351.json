{"ast":null,"code":"var _jsxFileName = \"/Users/james/iCloud Drive (Archive)/Documents/Code/fin-app/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, ConnectedRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./App.css\";\nimport ChartComponent from \"./components/ChartComponent\";\nimport InfoComponent from \"./components/InfoComponent\";\nimport CompanyComponent from \"./components/CompanyComponent\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport StockHeader from \"./components/StockHeader\";\nimport HomeComponent from \"./components/HomeComponent\";\nimport OverviewPageComponent from \"./components/OverviewPageComponent\";\nimport LoginComponent from \"./components/LoginComponent\";\nimport RegisterComponent from \"./components/RegisterComponent\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { getWatchlists } from \"./actions/watchlistActions\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ready: false,\n      authenticated: false\n    };\n  }\n\n  componentWillMount() {\n    //Checking if user is already logged in. If so, we re-log them in\n    if (localStorage.jwtToken) {\n      localStorage.remove(jwtToken);\n      const token = localStorage.jwtToken;\n      setAuthToken(token);\n      this.setState({\n        authenticated: true\n      });\n      const decoded = jwt_decode(token);\n      store.dispatch(setCurrentUser(decoded));\n      store.dispatch(getWatchlists(decoded.email)) //Getting users watchlists to save in store.\n      .then(res => this.setState({\n        ready: res.payload != []\n      })); //Waits for PROMISE before continuing\n\n      const currentTime = Date.now() / 1000; // to get in milliseconds\n\n      if (decoded.exp < currentTime) {\n        // Logout user, token expired\n        store.dispatch(logoutUser());\n      }\n    } else {\n      this.setState({\n        ready: true\n      });\n    }\n  }\n\n  render() {\n    return this.state.ready == true ? /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/home\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: LoginComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      component: RegisterComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/home\",\n      component: HomeComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/stock/:symbol\",\n      component: OverviewPageComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    })), this.state.authenticated ? /*#__PURE__*/React.createElement(Footer, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 42\n      }\n    }) : null)))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/james/iCloud Drive (Archive)/Documents/Code/fin-app/frontend/src/App.js"],"names":["React","Component","ReactDOM","BrowserRouter","Router","ConnectedRouter","Switch","Route","Link","Redirect","Provider","store","ChartComponent","InfoComponent","CompanyComponent","Navbar","Footer","StockHeader","HomeComponent","OverviewPageComponent","LoginComponent","RegisterComponent","jwt_decode","setAuthToken","setCurrentUser","logoutUser","getWatchlists","App","constructor","state","ready","authenticated","componentWillMount","localStorage","jwtToken","remove","token","setState","decoded","dispatch","email","then","res","payload","currentTime","Date","now","exp","render","props","history","pathname","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router,ConnectedRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"./App.css\";\nimport ChartComponent from \"./components/ChartComponent\";\nimport InfoComponent from \"./components/InfoComponent\";\nimport CompanyComponent from \"./components/CompanyComponent\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\"\nimport StockHeader from \"./components/StockHeader\";\nimport HomeComponent from \"./components/HomeComponent\";\nimport OverviewPageComponent from \"./components/OverviewPageComponent\";  \nimport LoginComponent from \"./components/LoginComponent\";\nimport RegisterComponent from \"./components/RegisterComponent\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { getWatchlists } from \"./actions/watchlistActions\"\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      ready: false,\n      authenticated: false\n    }\n  }\n  componentWillMount(){\n     //Checking if user is already logged in. If so, we re-log them in\n    if (localStorage.jwtToken) {\n      localStorage.remove(jwtToken)\n      const token = localStorage.jwtToken;\n      setAuthToken(token);\n      this.setState({authenticated: true})\n      const decoded = jwt_decode(token);\n      store.dispatch(setCurrentUser(decoded));\n      store.dispatch(getWatchlists(decoded.email))//Getting users watchlists to save in store.\n        .then((res) => this.setState({ready: res.payload != []}))//Waits for PROMISE before continuing\n      const currentTime = Date.now() / 1000; // to get in milliseconds\n      if (decoded.exp < currentTime) {\n        // Logout user, token expired\n        store.dispatch(logoutUser());\n      }\n    }\n    else{\n      this.setState({ready: true})\n    }\n  }\n\n  render(){\n    return this.state.ready == true?\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <div>\n              <Navbar history={this.props.history}/>\n              <Switch>\n                <Route exact path=\"/\" render={() => <Redirect to={{pathname: \"/home\"}} />} />\n                <Route path=\"/login\" component={LoginComponent}></Route>\n                <Route path=\"/register\" component={RegisterComponent}></Route>\n                <Route path=\"/home\" component={HomeComponent}></Route>\n                <Route path=\"/stock/:symbol\" component={OverviewPageComponent}></Route>\n              </Switch>\n              {this.state.authenticated? <Footer history={this.props.history}/>: null}\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    : <div></div>\n  }\n}\nexport default App; \n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}