{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\"; //REGISTER\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"/api/users/register\", userData).then(res => {// history.push(\"/login\")//Redir to login page!\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  })); //WHEN REGISTERING, A USER IS AUTOMATCALLY ASSIGNED A WATCHLIST\n}; //LOGIN\n\nexport const loginUser = userData => dispatch => {\n  axios.post(\"http://localhost:5000/api/users/login\", userData).then(res => {\n    //SAVING TOKEN TO LOCAL STORAGE\n    console.log(res.data);\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setAuthToken(token);\n    const usr = jwt_decode(token);\n    dispatch(setCurrentUser(usr));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; //SETTING SESSION USER\n\nexport const setCurrentUser = usr => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: usr\n  };\n}; //SETTING USER LOADING\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  //REMOVE TOKEN FROM LOCAL STORAGE\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false); //NOW, NO CURRENT USER\n\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/Users/james/iCloud Drive (Archive)/Documents/Code/fin-app/frontend/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","catch","err","type","payload","response","data","loginUser","console","log","token","localStorage","setItem","usr","setCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,YAAvC,QAA2D,SAA3D,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC3DT,EAAAA,KAAK,CAACU,IAAN,CAAW,qBAAX,EAAkCH,QAAlC,EACKI,IADL,CACUC,GAAG,IAAI,CACV;AACF,GAHL,EAIKC,KAJL,CAIWC,GAAG,IAAIL,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAAEZ,UAAP;AAAmBa,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAAzC,GAAD,CAJ1B,EAD2D,CAO3D;AACH,CARM,C,CAUP;;AACA,OAAO,MAAMC,SAAS,GAAIZ,QAAD,IAAcE,QAAQ,IAAK;AAChDT,EAAAA,KAAK,CAACU,IAAN,CAAW,uCAAX,EAAoDH,QAApD,EACKI,IADL,CACUC,GAAG,IAAI;AACT;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACM,IAAhB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYV,GAAG,CAACM,IAAtB;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACArB,IAAAA,YAAY,CAACqB,KAAD,CAAZ;AACA,UAAMG,GAAG,GAAGvB,UAAU,CAACoB,KAAD,CAAtB;AACAb,IAAAA,QAAQ,CAACiB,cAAc,CAACD,GAAD,CAAf,CAAR;AACH,GATL,EAUKZ,KAVL,CAUWC,GAAG,IAAIL,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAAEZ,UAAP;AAAmBa,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAAzC,GAAD,CAV1B;AAWH,CAZM,C,CAcP;;AACA,OAAO,MAAMQ,cAAc,GAAGD,GAAG,IAAI;AACjC,SAAO;AACHV,IAAAA,IAAI,EAAEX,gBADH;AAEHY,IAAAA,OAAO,EAAES;AAFN,GAAP;AAIH,CALM,C,CAMP;;AACA,OAAO,MAAME,cAAc,GAAG,MAAM;AAChC,SAAO;AACHZ,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMuB,UAAU,GAAG,MAAMnB,QAAQ,IAAI;AACxC;AACAc,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACA5B,EAAAA,YAAY,CAAC,KAAD,CAAZ,CAHwC,CAIxC;;AACAQ,EAAAA,QAAQ,CAACiB,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,CANM","sourcesContent":["import axios from \"axios\"\nimport setAuthToken from \"../utils/setAuthToken\"\nimport jwt_decode from \"jwt-decode\"\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\"\n\n//REGISTER\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post(\"/api/users/register\", userData)\n        .then(res => {\n           // history.push(\"/login\")//Redir to login page!\n        })\n        .catch(err => dispatch({type: GET_ERRORS, payload: err.response.data})\n    );\n    //WHEN REGISTERING, A USER IS AUTOMATCALLY ASSIGNED A WATCHLIST\n};\n\n//LOGIN\nexport const loginUser = (userData) => dispatch  => {\n    axios.post(\"http://localhost:5000/api/users/login\", userData)\n        .then(res => {\n            //SAVING TOKEN TO LOCAL STORAGE\n            console.log(res.data)\n            const { token } = res.data\n            localStorage.setItem(\"jwtToken\", token);\n            setAuthToken(token)\n            const usr = jwt_decode(token)\n            dispatch(setCurrentUser(usr))\n        })\n        .catch(err => dispatch({type: GET_ERRORS, payload: err.response.data})) \n}\n\n//SETTING SESSION USER\nexport const setCurrentUser = usr => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: usr\n    }\n}\n//SETTING USER LOADING\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    }\n}\n\nexport const logoutUser = () => dispatch => {\n    //REMOVE TOKEN FROM LOCAL STORAGE\n    localStorage.removeItem(\"jwtToken\")\n    setAuthToken(false)\n    //NOW, NO CURRENT USER\n    dispatch(setCurrentUser({}))\n}"]},"metadata":{},"sourceType":"module"}