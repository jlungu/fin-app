{"ast":null,"code":"var _jsxFileName = \"/Users/james/iCloud Drive (Archive)/Documents/Code/fin-app/frontend/src/components/InfoComponent.js\";\nimport React, { Component } from \"react\";\nexport class ChartComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getChange = () => {\n      //Simply returning string; tells change in price from previous close...\n      const diff = (this.state.price - this.state.prevClose).toFixed(2);\n\n      if (diff < 0) {\n        //In this case, we have negative value. Price should be RED...\n        this.setState({\n          red: true\n        });\n      } else {\n        //No dice; num should be GREEN BABY STOCKS ONLY GO UP\n        this.setState({\n          red: true\n        });\n      }\n\n      return diff;\n    };\n\n    this.setMarketCap = () => {\n      const mc = this.state.marketCap;\n\n      if (mc > 999999999999) {//Trillions\n      } else {\n        //Thousands. Just put full number\n        this.setState({\n          marketCap: \"$\" + mc.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") //Formatting to thousands...\n\n        });\n      }\n    };\n\n    this.withinMarketHours = day => {\n      if (day.getHours() == 9 && day.getMinutes() >= 30) return true;else if (day.getHours() > 9 && day.getHours() < 16) return true;else return false;\n    };\n\n    this.state = {\n      price: -1,\n      prevClose: -1,\n      red: false,\n      //Red means a decline from previous close, false red means its green i.e. an inc\n      marketCap: -1,\n      time: -1,\n      subscribed: false,\n      peRatio: \"N/A\",\n      volume: 0,\n      eps: -1,\n      bookVal: -1,\n      beta: -1,\n      exDivDate: \"N/A\",\n      divAmt: \"N/A\",\n      open: -1,\n      symbol: this.props.symbol.toUpperCase()\n    };\n  }\n\n  componentDidMount() {\n    //Need to make API call to get current stock price.....\n    fetch(\"https://finnhub.io/api/v1/quote?symbol=\" + this.props.symbol + \"&token=brain17rh5rbgnjpuck0\").then(res => res.json()).then(data => {\n      this.setState({\n        price: data.c,\n        afterHours: data.c,\n        prevClose: data.pc,\n        time: data.t,\n        open: data.o,\n        close: data.c\n      });\n    }); //NEED: Market capitalization, shares outstanding.\n\n    fetch(\"https://finnhub.io/api/v1/stock/metric?symbol=\" + this.props.symbol + \"&metric=price&token=brain17rh5rbgnjpuck0\").then(res => res.json()).then(data => this.setState({\n      marketCap: data.metric.marketCapitalization,\n      beta: data.metric.beta ? data.metric.beta.toFixed(2) : 'N/A'\n    })); //QUOTE. Grabbing latest volume from IEXCLOUD API\n\n    fetch('https://sandbox.iexapis.com/stable/stock/' + this.props.symbol + '/quote?token=Tsk_50d3a3ecf17047948593b4a3d34a80c6').then(res => res.json()).then(data => this.setState({\n      volume: data.latestVolume == null ? data.previousVolume : data.latestVolume\n    })); //API call for PE RATIO.\n\n    fetch(\"https://finnhub.io/api/v1/stock/metric?symbol=\" + this.props.symbol + \"&metric=valuation&token=brain17rh5rbgnjpuck0\").then(res => res.json()).then(data => this.setState({\n      peRatio: data.metric.peExclExtraTTM ? data.metric.peExclExtraTTM.toFixed(2) : \"N/A\"\n    })); //API call for EPS/BOOK VALUE.\n\n    fetch(\"https://finnhub.io/api/v1/stock/metric?symbol=\" + this.props.symbol + \"&metric=perShare&token=brain17rh5rbgnjpuck0\").then(res => res.json()).then(data => this.setState({\n      eps: data.metric.epsInclExtraItemsTTM ? data.metric.epsInclExtraItemsTTM.toFixed(2) : \"N/A\",\n      bookVal: data.metric.bookValuePerShareQuarterly ? data.metric.bookValuePerShareQuarterly.toFixed(2) : \"N/A\"\n    })); //API call for DIVIDENDS (Using IEX cloud, Finnhub made them premium accces only and i is broke :/)\n\n    fetch(\"https://sandbox.iexapis.com/stable/time-series/advanced_dividends/\" + this.props.symbol + \"?last=4&token=Tsk_50d3a3ecf17047948593b4a3d34a80c6\").then(res => res.json()).then(data => {\n      this.setState({\n        exDivDate: data.length != 0 ? data[0].exDate : 'N/A',\n        divAmt: data.length != 0 ? data[0].amount : 'N/A'\n      });\n    }); //WEBSOCKET - Subscribe to updates on PRICING. Need to see real-time updates, WHEN ITS A TRADING DAY.\n\n    const socket = new WebSocket(\"wss://ws.finnhub.io?token=brain17rh5rbgnjpuck0\");\n    const sym = this.props.symbol; // Connection opened -> Subscribe\n\n    socket.addEventListener(\"open\", function (event) {\n      socket.send(JSON.stringify({\n        type: \"subscribe\",\n        symbol: sym\n      }));\n    }); // Listen for messages\n\n    var volume = 0;\n    socket.addEventListener(\"message\", event => {\n      volume = this.state.volume;\n      var x = JSON.parse(event.data);\n      if (x.type != \"trade\") return;\n      this.withinMarketHours(new Date()) ? this.setState({\n        price: x.data[0].p,\n        volume: volume + x.data[0].v\n      }) : console.log(\"update\");\n      this.setState({\n        afterHours: x.data[0].p,\n        volume: volume + x.data[0].v\n      });\n    });\n  }\n\n  render() {\n    const {\n      price,\n      prevClose,\n      marketCap,\n      beta,\n      peRatio,\n      volume,\n      eps,\n      bookVal,\n      exDivDate,\n      divAmt,\n      open,\n      close,\n      afterHours\n    } = this.state;\n    const change = (price - prevClose).toFixed(2);\n    var percentChange = (change / prevClose * 100).toFixed(2);\n    const afterHoursChng = (afterHours - price).toFixed(2);\n    var mc = marketCap ? marketCap > 999999 ? \"$\" + (marketCap / 1000000).toFixed(3) + \"T\" //TRILLIONS\n    : marketCap > 999 ? \"$\" + (marketCap / 1000).toFixed(3) + \"B\" //BILLIONS\n    : \"$\" + marketCap.toFixed(3) + \"M\" //MILLIONS\"\n    : 'N/A'; //Changing tab to fit the proper stock!\n\n    document.title = this.props.symbol + \" - $\" + price.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \"(\" + (change < 0 ? change : \"+\" + change) + \")\";\n    var red = {\n      //Red and green colors; depends on if stock is down or up.\n      color: \"red\"\n    };\n    var green = {\n      color: \"green\"\n    };\n    var grey = {\n      color: \"grey\"\n    };\n    var style = change < 0 ? red : change == 0 ? grey : green;\n    var aftrStyle = afterHoursChng < 0 ? red : afterHoursChng == 0 ? grey : green;\n    var prefix = change < 0 ? \"\" : change == 0 ? \" \" : \"+\";\n    var aftrPrefix = afterHoursChng < 0 ? \"\" : afterHoursChng == 0 ? \" \" : \"+\";\n    var today = new Date();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }, \"Quick Look\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-lg-3 w\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"lcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, \"Open\"), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"rcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 19\n      }\n    }, open.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"lcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, \"Previous Close\"), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"rcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    }, prevClose.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"lcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, \"Market Cap\"), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"rcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, mc)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"lcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, \"Volume\"), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"rcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 19\n      }\n    }, volume.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"lcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }\n    }, \"Book Value\"), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"rcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }, bookVal))))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-lg-3 w\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"priceDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: style,\n      id: \"currentPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, \"$\", price.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"priceChange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, prefix, change, \"(\", prefix, percentChange, \"%)\"), today.getDay() == 6 || today.getDay() == 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      id: \"market-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 60\n      }\n    }, \"Market is: \", /*#__PURE__*/React.createElement(\"p\", {\n      id: \"closed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 95\n      }\n    }, \"CLOSED\")) : this.withinMarketHours(today) ? /*#__PURE__*/React.createElement(\"span\", {\n      id: \"market-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 160\n      }\n    }, \"Market is: \", /*#__PURE__*/React.createElement(\"p\", {\n      id: \"open\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 195\n      }\n    }, \"OPEN\")) : today.getHours() >= 16 && today.getHours() < 20 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"afterHoursHead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, \"After Hours\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: aftrStyle,\n      id: \"afterHrsPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, \"$\", afterHours ? afterHours.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : 'N/A'), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"afterHrsChng\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, aftrPrefix, afterHoursChng)) : /*#__PURE__*/React.createElement(\"span\", {\n      id: \"market-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }, \"Market is: \", /*#__PURE__*/React.createElement(\"p\", {\n      id: \"closed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 52\n      }\n    }, \"CLOSED\")))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-lg-3 w\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"lcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 19\n      }\n    }, \"EPS\"), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"rcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 19\n      }\n    }, eps)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"lcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }, \"PE Ratio\"), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"rcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }\n    }, peRatio)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"lcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 19\n      }\n    }, \"Beta\"), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"rcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 19\n      }\n    }, beta)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"lcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }, \"Latest Dividend\"), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"rcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 19\n      }\n    }, divAmt)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      class: \"lcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 19\n      }\n    }, \"Ex Dividend Date\"), /*#__PURE__*/React.createElement(\"td\", {\n      class: \"rcell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 19\n      }\n    }, exDivDate)))))));\n  }\n\n}\nexport default ChartComponent;","map":{"version":3,"sources":["/Users/james/iCloud Drive (Archive)/Documents/Code/fin-app/frontend/src/components/InfoComponent.js"],"names":["React","Component","ChartComponent","constructor","props","getChange","diff","state","price","prevClose","toFixed","setState","red","setMarketCap","mc","marketCap","toString","replace","withinMarketHours","day","getHours","getMinutes","time","subscribed","peRatio","volume","eps","bookVal","beta","exDivDate","divAmt","open","symbol","toUpperCase","componentDidMount","fetch","then","res","json","data","c","afterHours","pc","t","o","close","metric","marketCapitalization","latestVolume","previousVolume","peExclExtraTTM","epsInclExtraItemsTTM","bookValuePerShareQuarterly","length","exDate","amount","socket","WebSocket","sym","addEventListener","event","send","JSON","stringify","type","x","parse","Date","p","v","console","log","render","change","percentChange","afterHoursChng","document","title","color","green","grey","style","aftrStyle","prefix","aftrPrefix","today","getDay"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport class ChartComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: -1,\n      prevClose: -1,\n      red: false, //Red means a decline from previous close, false red means its green i.e. an inc\n      marketCap: -1,\n      time: -1,\n      subscribed: false,\n      peRatio: \"N/A\",\n      volume: 0,\n      eps: -1,\n      bookVal: -1,\n      beta: -1,\n      exDivDate: \"N/A\",\n      divAmt: \"N/A\",\n      open: -1,\n      symbol: this.props.symbol.toUpperCase()\n    };\n  }\n  componentDidMount() {\n    //Need to make API call to get current stock price.....\n    fetch(\n      \"https://finnhub.io/api/v1/quote?symbol=\" +\n        this.props.symbol +\n        \"&token=brain17rh5rbgnjpuck0\"\n    )\n      .then((res) => res.json())\n      .then((data) =>{\n        this.setState({\n          price: data.c,\n          afterHours: data.c,\n          prevClose: data.pc,\n          time: data.t,\n          open: data.o,\n          close: data.c,\n        })\n      }   \n      );\n\n    //NEED: Market capitalization, shares outstanding.\n    fetch(\n      \"https://finnhub.io/api/v1/stock/metric?symbol=\" +\n        this.props.symbol +\n        \"&metric=price&token=brain17rh5rbgnjpuck0\"\n      )\n      .then((res) => res.json())\n      .then((data) =>\n        this.setState({\n          marketCap: data.metric.marketCapitalization,\n          beta: data.metric.beta? data.metric.beta.toFixed(2): 'N/A',\n        })\n      );\n\n    //QUOTE. Grabbing latest volume from IEXCLOUD API\n    fetch('https://sandbox.iexapis.com/stable/stock/'+this.props.symbol+'/quote?token=Tsk_50d3a3ecf17047948593b4a3d34a80c6')\n    .then(res => res.json())\n    .then(data => this.setState({\n      volume: data.latestVolume == null? data.previousVolume: data.latestVolume\n    }))\n    \n\n    //API call for PE RATIO.\n    fetch(\n      \"https://finnhub.io/api/v1/stock/metric?symbol=\" +\n        this.props.symbol +\n        \"&metric=valuation&token=brain17rh5rbgnjpuck0\"\n    )\n      .then((res) => res.json())\n      .then((data) =>\n        this.setState({\n          peRatio: data.metric.peExclExtraTTM\n            ? data.metric.peExclExtraTTM.toFixed(2)\n            : \"N/A\",\n        })\n      );\n\n    //API call for EPS/BOOK VALUE.\n    fetch(\n      \"https://finnhub.io/api/v1/stock/metric?symbol=\" +\n        this.props.symbol +\n        \"&metric=perShare&token=brain17rh5rbgnjpuck0\"\n    )\n      .then((res) => res.json())\n      .then((data) =>\n        this.setState({\n          eps: data.metric.epsInclExtraItemsTTM\n            ? data.metric.epsInclExtraItemsTTM.toFixed(2)\n            : \"N/A\",\n          bookVal: data.metric.bookValuePerShareQuarterly\n            ? data.metric.bookValuePerShareQuarterly.toFixed(2)\n            : \"N/A\",\n        })\n      );\n\n    //API call for DIVIDENDS (Using IEX cloud, Finnhub made them premium accces only and i is broke :/)\n    fetch(\n      \"https://sandbox.iexapis.com/stable/time-series/advanced_dividends/\" +\n        this.props.symbol +\n        \"?last=4&token=Tsk_50d3a3ecf17047948593b4a3d34a80c6\"\n    )\n      .then((res) => res.json())\n      .then((data) =>{\n        this.setState({\n          exDivDate: data.length != 0? data[0].exDate: 'N/A',\n          divAmt: data.length != 0? data[0].amount: 'N/A',\n        })\n      }\n      );\n\n    //WEBSOCKET - Subscribe to updates on PRICING. Need to see real-time updates, WHEN ITS A TRADING DAY.\n    const socket = new WebSocket(\n      \"wss://ws.finnhub.io?token=brain17rh5rbgnjpuck0\"\n    );\n    const sym = this.props.symbol;\n    // Connection opened -> Subscribe\n    socket.addEventListener(\"open\", function (event) {\n      socket.send(JSON.stringify({ type: \"subscribe\", symbol: sym }));\n    });\n\n    // Listen for messages\n    var volume = 0;\n    socket.addEventListener(\"message\", (event) => {\n      volume = this.state.volume;\n      var x = JSON.parse(event.data);\n      if (x.type != \"trade\") return;\n      this.withinMarketHours(new Date())?\n      this.setState({\n        price: x.data[0].p,\n        volume: (volume + x.data[0].v),\n      }): \n      console.log(\"update\")\n      this.setState({\n        afterHours: x.data[0].p,\n        volume: (volume + x.data[0].v),\n      })\n    });\n  }\n\n  getChange = () => {\n    //Simply returning string; tells change in price from previous close...\n    const diff = (this.state.price - this.state.prevClose).toFixed(2);\n    if (diff < 0) {\n      //In this case, we have negative value. Price should be RED...\n      this.setState({\n        red: true,\n      });\n    } else {\n      //No dice; num should be GREEN BABY STOCKS ONLY GO UP\n      this.setState({\n        red: true,\n      });\n    }\n    return diff;\n  };\n\n  setMarketCap = () => {\n    const mc = this.state.marketCap;\n    if (mc > 999999999999) {\n      //Trillions\n    } else {\n      //Thousands. Just put full number\n      this.setState({\n        marketCap: \"$\" + mc.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"), //Formatting to thousands...\n      });\n    }\n  };\n\n  //Simply determines if we are in market hours, and should indicate as so\n  withinMarketHours = (day) => {\n    if (day.getHours() == 9 && day.getMinutes() >= 30)\n      return true;\n    else if (day.getHours() > 9 && day.getHours() < 16)\n      return true;\n    else\n      return false;\n  }\n\n  render() {\n    const {\n      price,\n      prevClose,\n      marketCap,\n      beta,\n      peRatio,\n      volume,\n      eps,\n      bookVal,\n      exDivDate,\n      divAmt,\n      open,\n      close,\n      afterHours\n    } = this.state;\n    const change = (price - prevClose).toFixed(2);\n    var percentChange = ((change / prevClose) * 100).toFixed(2)\n    const afterHoursChng = (afterHours - price).toFixed(2)\n    var mc = marketCap? (marketCap > 999999\n        ? \"$\" + (marketCap / 1000000).toFixed(3) + \"T\" //TRILLIONS\n        : marketCap > 999\n        ? \"$\" + (marketCap / 1000).toFixed(3) + \"B\" //BILLIONS\n        : \"$\" + marketCap.toFixed(3) + \"M\" //MILLIONS\"\n    ): 'N/A'\n    //Changing tab to fit the proper stock!\n    document.title = this.props.symbol + \" - $\" + \n    price.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    + \"(\" + (change < 0? change: \"+\" + change) + \")\"\n    var red = {\n      //Red and green colors; depends on if stock is down or up.\n      color: \"red\",\n    };\n    var green = {\n      color: \"green\",\n    };\n    var grey = {\n      color: \"grey\",\n    };\n\n    var style = change < 0 ? red : change == 0? grey: green;\n    var aftrStyle = afterHoursChng< 0? red: afterHoursChng == 0? grey: green\n    var prefix = change < 0 ? \"\" : change == 0? \" \":\"+\";\n    var aftrPrefix = afterHoursChng < 0? \"\": afterHoursChng == 0? \" \": \"+\"\n    var today = new Date();\n    \n\n    return (\n      <div class=\"container info-container\">\n        <h3 className=\"h3\">Quick Look</h3>\n        <div class=\"row justify-content-md-center\">\n          <div class=\"col-lg-3 w\">\n            <table>\n              <tbody>\n                <tr>\n                <td class=\"lcell\">Open</td>\n                  <td class=\"rcell\">{open.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                </tr>\n                <tr>\n                <td class=\"lcell\">Previous Close</td>\n                  <td class=\"rcell\">{prevClose.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                </tr>\n                <tr>\n                  <td class=\"lcell\">Market Cap</td>\n                  <td class=\"rcell\">{mc}</td>\n                </tr>\n                <tr>\n                  <td class=\"lcell\">Volume</td>\n                  <td class=\"rcell\">\n                    {volume.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"lcell\">Book Value</td>\n                  <td class=\"rcell\">{bookVal}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class=\"col-lg-3 w\">\n            <div id=\"priceDiv\">\n              <span style={style} id=\"currentPrice\">\n                ${price.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </span>\n              <span id=\"priceChange\">\n                {prefix}\n                {change}\n                ({prefix}{percentChange}%)\n              </span>\n              {today.getDay() == 6 || today.getDay() == 0? <span id=\"market-label\">Market is: <p id=\"closed\">CLOSED</p></span>: this.withinMarketHours(today)? <span id=\"market-label\">Market is: <p id=\"open\">OPEN</p></span>\n              : today.getHours() >= 16 && today.getHours() < 20?\n              <div>\n                <span id=\"afterHoursHead\">After Hours</span>\n                <span style={aftrStyle} id=\"afterHrsPrice\">\n                  ${afterHours? afterHours.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"): 'N/A'}\n                </span>\n                <span id=\"afterHrsChng\">\n                  {aftrPrefix}\n                  {afterHoursChng}\n                </span>\n              </div>\n              :\n                <span id=\"market-label\">Market is: <p id=\"closed\">CLOSED</p></span>\n              }\n              \n            </div>\n          </div>\n          <div class=\"col-lg-3 w\">\n            <table>\n              <tbody>\n                <tr>\n                  <td class=\"lcell\">EPS</td>\n                  <td class=\"rcell\">{eps}</td>\n                </tr>\n                <tr>\n                  <td class=\"lcell\">PE Ratio</td>\n                  <td class=\"rcell\">{peRatio}</td>\n                </tr>\n                <tr>\n                  <td class=\"lcell\">Beta</td>\n                  <td class=\"rcell\">{beta}</td>\n                </tr>\n                <tr>\n                  <td class=\"lcell\">Latest Dividend</td>\n                  <td class=\"rcell\">{divAmt}</td>\n                </tr>\n                <tr>\n                  <td class=\"lcell\">Ex Dividend Date</td>\n                  <td class=\"rcell\">{exDivDate}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ChartComponent;\n"]},"metadata":{},"sourceType":"module"}