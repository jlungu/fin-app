{"ast":null,"code":"var _jsxFileName = \"/Users/james/iCloud Drive (Archive)/Documents/Code/fin-app/frontend/src/components/Footer.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nexport class Footer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      formattedStocks: []\n    };\n  }\n\n  componentDidMount() {\n    let stocks = [];\n    let buffer = \"\";\n    this.props.watchlists.watchlists[0].stocks.forEach(stock => {\n      buffer = \"\";\n      fetch('https://finnhub.io/api/v1/quote?symbol=' + stock + '&token=brain17rh5rbgnjpuck0').then(res => res.json()).then(data => {\n        buffer += stock + \"| \" + data.c + \" \" + (data.pc - data.c);\n      });\n      stocks.push(buffer);\n    });\n    this.setState({\n      formattedStocks: stocks\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"watchlist_bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, this.state.formattedStocks.map(stock => /*#__PURE__*/React.createElement(\"div\", {\n      id: \"watchlist_item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 58\n      }\n    }, stock)));\n  }\n\n}\nFooter.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  watchlists: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  user: state.user,\n  errors: state.errors,\n  watchlists: state.watchlists\n});\n\nexport default connect(mapStateToProps)(withRouter(Footer));","map":{"version":3,"sources":["/Users/james/iCloud Drive (Archive)/Documents/Code/fin-app/frontend/src/components/Footer.js"],"names":["React","Component","PropTypes","connect","withRouter","Footer","constructor","state","formattedStocks","componentDidMount","stocks","buffer","props","watchlists","forEach","stock","fetch","then","res","json","data","c","pc","push","setState","render","map","propTypes","auth","object","isRequired","errors","mapStateToProps","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA0B,kBAA1B;AAEA,OAAO,MAAMC,MAAN,SAAqBJ,SAArB,CAA8B;AACjCK,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE;AADR,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,SAAKC,KAAL,CAAWC,UAAX,CAAsBA,UAAtB,CAAiC,CAAjC,EAAoCH,MAApC,CAA2CI,OAA3C,CAAmDC,KAAK,IAAI;AACxDJ,MAAAA,MAAM,GAAG,EAAT;AACAK,MAAAA,KAAK,CAAC,4CAA4CD,KAA5C,GAAoD,6BAArD,CAAL,CACKE,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAG;AACTT,QAAAA,MAAM,IAAII,KAAK,GAAG,IAAR,GAAeK,IAAI,CAACC,CAApB,GAAwB,GAAxB,IAA+BD,IAAI,CAACE,EAAL,GAAUF,IAAI,CAACC,CAA9C,CAAV;AACH,OAJL;AAKAX,MAAAA,MAAM,CAACa,IAAP,CAAYZ,MAAZ;AACH,KARD;AASA,SAAKa,QAAL,CAAc;AAAChB,MAAAA,eAAe,EAAEE;AAAlB,KAAd;AACH;;AACDe,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlB,KAAL,CAAWC,eAAX,CAA2BkB,GAA3B,CAA+BX,KAAK,iBAAI;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BA,KAA1B,CAAxC,CADL,CADJ;AAKH;;AA5BgC;AA+BrCV,MAAM,CAACsB,SAAP,GAAmB;AACfC,EAAAA,IAAI,EAAE1B,SAAS,CAAC2B,MAAV,CAAiBC,UADR;AAEfC,EAAAA,MAAM,EAAE7B,SAAS,CAAC2B,MAAV,CAAiBC,UAFV;AAGfjB,EAAAA,UAAU,EAAEX,SAAS,CAAC2B,MAAV,CAAiBC;AAHd,CAAnB;;AAME,MAAME,eAAe,GAAGzB,KAAK,KAAK;AAChCqB,EAAAA,IAAI,EAAErB,KAAK,CAACqB,IADoB;AAEhCK,EAAAA,IAAI,EAAE1B,KAAK,CAAC0B,IAFoB;AAGhCF,EAAAA,MAAM,EAAExB,KAAK,CAACwB,MAHkB;AAIhClB,EAAAA,UAAU,EAAEN,KAAK,CAACM;AAJc,CAAL,CAA7B;;AAOA,eAAeV,OAAO,CAAC6B,eAAD,CAAP,CAAyB5B,UAAU,CAACC,MAAD,CAAnC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter} from 'react-router-dom';\n\nexport class Footer extends Component{\n    constructor(){\n        super()\n        this.state = {\n            formattedStocks: []\n        }\n    }\n\n    componentDidMount(){\n        let stocks = []\n        let buffer = \"\"\n        this.props.watchlists.watchlists[0].stocks.forEach(stock => {\n            buffer = \"\"\n            fetch('https://finnhub.io/api/v1/quote?symbol=' + stock + '&token=brain17rh5rbgnjpuck0')\n                .then(res => res.json())\n                .then(data =>{\n                    buffer += stock + \"| \" + data.c + \" \" + (data.pc - data.c)\n                })\n            stocks.push(buffer)\n        })\n        this.setState({formattedStocks: stocks})\n    }\n    render(){\n        return(\n            <div id=\"watchlist_bar\">\n                {this.state.formattedStocks.map(stock => <div id=\"watchlist_item\">{stock}</div>)}\n            </div>  \n        )\n    }\n}\n\nFooter.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n    watchlists: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    auth: state.auth, \n    user: state.user,\n    errors: state.errors,\n    watchlists: state.watchlists\n  });\n  \n  export default connect(mapStateToProps)(withRouter(Footer));"]},"metadata":{},"sourceType":"module"}